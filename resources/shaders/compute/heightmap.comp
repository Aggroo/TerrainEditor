layout(binding=1, rgba16f) restrict writeonly uniform image2D heightmapOut;

layout(std430, binding = 10) buffer LayerVariables
{
    int numHeightmaps;
    bool useFirstLayerAsMask[5];
    float layerStrength[5];
};

uniform sampler2D heightmaps[5];

#include("blend.glsl")

layout(local_size_x=TILE_SIZE, local_size_y=TILE_SIZE, local_size_z=1) in;
void main(void)
{
    // get index in global work group i.e x,y position
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
    float height = texture(heightmaps[0], pixelCoords).r;
	float mask = height;
	
	for(int i = 1; i < numHeightmaps; i++)
	{
        float m = useFirstLayerAsMask[i] ? mask : 1;
		height = Overlay(height, texture(heightmaps[i], inCoord)).r * m * layerStrength[i];
	}

    imageStore(heightmapOut, pixelCoords, vec4(height, height, height, height));
}